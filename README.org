This package integrates the excellent [[https://github.com/abo-abo/lispy][lispy]] lisp editing package to Evil.
Lispy works with different lisp modes, including Emacs Lisp and Clojure.

* Goals and design philosophy

The goal is to encourage a workflow where you can hop between ~lispy-state~ for
making structured edits using lispy bindings and the rest of the standard Evil
states for general editing.

- Lisp has a natural structure
  - Natural to edit structurally
  - Natural to navigate structurally
- Intuitive for Evil / vim users
  - ~hjkl~ for moving, ~gv~ to mark, ~e~ to eval.
     You now know the basics!
- Natural and easy fallback to vanilla Evil editing
  - If you panic, just hit ~ESC~ to return to normal mode
  - You can still use e.g. Evil ~()~ text objects just fine.
     When you learn more of lispy, your productivity will only increase.
- Modal editing is good for your health
  - Lispy commands only apply when explicitly activated
  - Less chance of munging your code unexpectedly

* Key Bindings
You can enter this mode *from normal mode* with the following commands:

| Key Binding | Description                                                |
|-------------+------------------------------------------------------------|
| ~(~         | jump to the previous parenthesis and enter evil-lispy-mode |
| ~)~         | same, but jump to the next parenthesis instead             |
| ~gv~        | select current symbol and enter evil-lispy-mode            |
| ~<i or <I~  | insert at the start of the current expression              |
| ~>i or >I~  | insert at the end                                          |

* Credits
Forked from [[https://github.com/bcarrell/evil-lispy][bcarrell/evil-lispy]].
Many, many thanks to ~bcarrell~ for his awesome work on this.
